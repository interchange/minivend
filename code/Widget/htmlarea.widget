CodeDef htmlarea Widget 1
CodeDef htmlarea Documentation <<EOD
=head1 NAME

HTMLArea widget for Interchange

=head1 SYNOPSIS

  [display type=htmlarea name=foo height=NN width=NNN]

 or

  [table-editor
  	widget.foo=htmlarea
	...
  ]

=head1 DESCRIPTION

The C<htmlarea> widget makes calls to HTMLArea, an excellent rich-text
editor that replaces a C<TEXTAREA> component on supported browsers. It
operates as a normal textarea otherwise.

Supported browsers include at least Mozilla 1.3.1 and higher, and
MSIE 6 and higher.

=head1 INSTALLATION

To install, get HTMLArea-3.0-RC1 or later and install in the C<htmlarea>
directory of your DocumentRoot. (That means that routines can be accessed
with a base HREF of C</htmlarea/>.

Alternatively, you can set the Interchnage Variable HTMLAREA_PATH to
the appropriate path.

This widget requires Interchange 5.0 and higher.

If you are planning on using it outside of the Interchange UI, you must
either have the output-style of layout (the "mike" demo) with a 
[scratch meta_header] call in the <HEAD> area, or you must place the
equivalent of the following in the header of any page to use this widget:

    [tmp tmp_hpath][either]__HTMLAREA_PATH__[or]/htmlarea/[/either][/tmp]
	<script type="text/javascript">
	   _editor_url = "[scratch hpath]";
	   _editor_lang = "en";
	</script>
	<script type="text/javascript" src="[scratch hpath]htmlarea.js"></script>

The "en" is the language locale to use. If you use the output-style
layout, this is automatically determined from the Interchange locale.
You can also override this with the Variable HTMLAREA_LANG.

=head1 BUGS

A bug in MSIE doesn't allow initialization of a textarea until the
complete document is loaded. This means that the editor toolbox will not
show up until the mouse enters the C<TEXTAREA>.

EOD

CodeDef htmlarea Routine <<EOR
sub {
	my ($opt) = @_;
#::logDebug("called kupu widget, value=$opt->{value}");
	use vars qw/$Tag/;

	my $fname = $opt->{form_name} || 'editor';

	my $callpage = $opt->{append} || 'special/kupu';

	my $pname = $opt->{name};

	my $wname = $opt->{window_name} || "ic_kupu_$pname";

	$pname =~ s/\W/_/g;

	unless(defined $opt->{close_window}) {
		$opt->{close_window} = 1;
	}

	if(! $::Scratch->{htmlarea_added}) {
		$Tag->tmp({ name => 'htmlarea_added', body => 1 });
		$::Scratch->{meta_header} ||= '';
		my $path = $::Variable->{HTMLAREA_PATH} || '/htmlarea/';
		my $lang = $::Variable->{HTMLAREA_LANG} || $::Scratch->{mv_locale} || 'en';
		$lang = substr($lang, 0, 2);
		$path =~ s:/*$:/:;
		$::Scratch->{meta_header} .= <<EOF;
<script type="text/javascript">
   _editor_url = "$path";
   _editor_lang = "$lang";
</script>
<script type="text/javascript" src="${path}htmlarea.js"></script>
EOF
	}

	my $val;
	if($opt->{value} =~ /</) {
		$val = HTML::Entities::encode($opt->{value});
	}
	else {
		$val = $opt->{value};
	}
	my $pre_scr = '';
	my $post_scr = '';
	my $onmouse = '';
	if($Session->{browser} =~ /MSIE/) {
	    $pre_scr = qq{
<script>
var htmlarea_needinit_$pname = true;
</script>
};
		$onmouse = qq{ onMouseOver="if(htmlarea_needinit_$pname) { HTMLArea.replace('htmlarea_$pname'); htmlarea_needinit_$pname=false }"};
	}
	else {
		$post_scr = <<EOF;
<script>
	HTMLArea.replace('htmlarea_$pname');
</script>
EOF
	}
	$opt->{height} =~ s/\D+//;
	$opt->{width} =~ s/\D+//;
	
	$opt->{anchor_style} ||= 'font-size: smaller';

	my $extra = $opt->{anchor_class} ? qq{ class="$opt->{anchor_class}"} : '';
	$extra .= qq{ style="$opt->{anchor_style}"} if $opt->{anchor_style};
	my $textra = $opt->{text_class} ? qq{ class="$opt->{text_class}"} : '';
	$textra .= qq{ style="$opt->{text_style}"} if $opt->{text_style};

	my $wid = qq{$pre_scr
<textarea id="htmlarea_$pname" rows=$opt->{height} cols=$opt->{width} name=$pname$onmouse>$val</textarea>
$post_scr};
	
	return $wid;
}
EOR
