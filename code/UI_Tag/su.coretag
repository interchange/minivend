UserTag su Description Switch User Tag for catalog superuser
UserTag su Order username
UserTag su attrAlias user username
UserTag su addAttr
UserTag su Routine <<EOR
sub {
	my ($user, $opt) = @_;
	use vars qw/$Session $Tag $ready_safe $Scratch/;
	if($user and ! $Tag->if_mm('super')) {
		::logError("attempt to su to user %s", $user);
		return undef;
	}


	my $dir = "$Global::ConfDir/tmp";
	if (! -d $dir) {
		if(-e $dir) {
			logGlobal("Global tmp directory exists as file, aborting su");
			return undef;
		}
		File::Path::mkpath($dir);
	}

	if($opt->{exit}) {
		if(! $Session->{su}) {
			logError("attempt to return to superuser without saved session.");
			return;
		}
		my $string = delete $Session->{su};
		my $key = $Tag->read_cookie({ name => 'MV_SU_KEY'})
			or do {
				logError("no session key in cookie, cannot exit");
				return;
			};
		my $fn = "$dir/$Session->{id}";
		open(MDCHECK, "< $fn")
			or do {
				logError("no saved session key in %s, cannot exit", $fn);
				return;
			};
		my $rand = <MDCHECK>;
		close MDCHECK;
		if(generate_key($rand . $string) ne $key) {
			logError("mismatched session key with saved session, cannot exit");
			return;
		}

		my $former = $Session->{username};
		## Authenticated
		undef $Vend::Session;
		undef $Session;
		$Vend::Session = $ready_safe->reval($string);
		$Session = $Vend::Session;
		delete $Session->{su};
		$Vend::admin = $Vend::Session->{admin};
		$Vend::username = $Vend::Session->{username};
		$Vend::logged_in = $Vend::Session->{logged_in};
		$Tag->if_mm('super')
			and logError(
					"Superuser %s returned from login as %s",
					$Session->{username},
					$former,
				)
			and return 1;
		return;
	}
	elsif ($user) {
		my $u = $Vend::Cfg->{UserDB}{$opt->{profile} ||= 'default'};
		my $table  = $u->{login_table};
		my $ufield = $u->{user_field};
#::logDebug("user table=$table ufield=$ufield");
		$table  ||= 'userdb';
		$ufield ||= 'username';
#::logDebug("user table=$table ufield=$ufield");
		if(! $Tag->data($table, $ufield, $user) ) {
			$Scratch->{ui_error} = errmsg("attempt to su to non-existent user %s", $user);
			return undef;
		}
		my $rand	= random_string();
		my $sess	= uneval_it($Session);
#::logDebug("sess is $sess");
		my $sesskey	= generate_key($rand . $sess);

		open(MDIT, "> $dir/$Session->{id}")
			or die errmsg("Can't create check file for su: %s\n", $!);
		print MDIT $rand;
		close MDIT;
		$Tag->set_cookie( { name => 'MV_SU_KEY', value => $sesskey } );
		my $former = $Session->{username};
		undef $Vend::admin;
		undef $Vend::superuser;
		Vend::Session::init_session();
		$Session = $Vend::Session;
		$Vend::username = $user;
		$Session->{username} = $user;
		$Session->{su} = $sess;
		$Session->{logged_in} = 1;
		$Tag->userdb('load');
		logError("superuser %s switched user to %s", $former, $Session->{username});
		return 1;
	}
	else {
		::logError("unknown su operation");
		return undef;
	}
}
EOR
