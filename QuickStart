# Interchange V4.5.x
# 
# Copyright (C) 1996-2000 Akopia, Inc. <info@akopia.com>
#
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later
# version. 
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA.

Welcome to Interchange!

--------------------------------------------------------------

                        QUICK START

Intro
    This document is a subset of the complete Interchange
    documentation.  Most of the information contained here is
    is duplicated in the general Interchange documentation. This
    document is designed to give you a starting point.  Interchange
    is fairly complex and can take a lot of time and effort to
    master.  Don't Panic.

What happened to Minivend and Tallyman?
    First there was Minivend, the open source ecommerce system begun by
    Mike Heins about five years ago.  Thousands of sites are using it,
    and it has evolved into a powerful and versatile tool over the years.
    Separately, Akopia was started by an experienced ecommerce development
    team with the goal of making a sophisticated open source ecommerce
    system that's intuitive and easy to use.  Minivend was very feature
    rich, but difficult to learn and use.  Tallyman was intuitive, and had
    great content management features, but lacked some of Minivend's
    capabilities.  So we joined forces, and Interchange is the result.
    Interchange 4.5 replaces both Tallyman and Minivend.  Minivend users
    will find the upgrade to Interchange relatively painless.  Tallyman
    users will not be as lucky.  Keep an eye on the web site for more
    details.  Until we iron out all of the naming issues the term "minivend"
    will be all over the code.  Then name "Tallyman" will be all over
    the UI, and the name Interchange will be all over the documentation.

Requirements:
        Perl5.005 or higher
            Interchange is written (almost) entirely in perl.  No
            extra modules are required to work, but some may be necessary
            to extend Interchange's functionality.

        Web Server
            Any web server with which you are familiar and has cgi
            capabilities should work. Apache is most commonly used.
            The install scripts assume apache is installed and running.

Install Walkthrough
        Make sure that you have user permissions to do the following:
             Write on the catalog install directory
             Read on the Apache config file (if possible)
             Write on the cgi-bin for the web server

        Unpack the distribution:
            gzip -dc interchange-4.5.x.tar.gz | tar xvf -

        Run the configuration script:
            ./configure
                You will be asked to enter the path for the install
                directory for the Interchange distribution.

Demo Store Install Walkthrough

     We'll be walking the whole install and setup process.  The text
     that you'll see during the install will be displayed with <-- next
     to it.  What's marked with --> is what you'll need to enter in.

     In order to begin, you will need permissions on your server for
     the following:
        Write on the catalog install directory
        Write on the Interchange install directory
        Write on the cgi-bin directory
        Write on the httpd document root

     If you don't know what any of this means, you might as well
     stop now.  Akopia can set you up with a server with Interchange
     pre-installed and you won't have to know anything about server
     permissions or root access.  See the web site for more details.

     To begin:

     Change to the directory in which Interchange is installed:
            cd /home/user/interchange
     Run the makecat script
            bin/makecat

     You will be asked a series of questions at this point.  If you
     want to change the answers to any of these questions later, it
     can be done through the editing of the configuration scripts.

<--Select a short, mnemonic name for the catalog. This will be
<--used to set the defaults for naming the catalog, executable,
<--and directory, so you will have to type in this name frequently.

<--NOTE: This will be the name of 'vlink' or 'tlink', the link CGI
<--program. Depending on your CGI setup, it may also have the
<--extension .cgi added.

<--If you are doing the demo for the first time, you might use "basic".

    This will be the name of your catalog.  The installer will use this
    name as the unique identifier for this catalog.  This will be the
    name of the cgi script that intercepts interchange requests.  It
    will also be used as the default for the directory in which to
    store catalog fiels.

<--Catalog name?
-->example

    I chose "example" as the catalog name in this case.

<--makecat -- Interchange catalog installation program.

<--*** We will be making a catalog named 'example'. ***

<--######### BEGINNING CATALOG CONFIGURATION #########
<--# The server name, something like: www.company.com
<--#                                  www.company.com:8000
<--#                                  www.company.com/~yourname
<--#
<--Server name? [localhost]
-->localhost

    It is the name at which the web server is receiving connections.
    Interchange will also be running on this server.

<--# The type of demo catalog to use. Standard types
<--# distributed are:
<--#
<--#    simple   -- database-based catalog, not really simple 8-)
<--#    basic    -- simplified set of features
<--#    barry    -- Barry's Books version of "simple"
<--#
<--# If you have defined your own custom template catalog,
<--# you can enter it's name.
<--#
<--# If you are new to Interchange and not a sophisticated web designer,
<--# use "barry" to start with.


<--DemoType? [basic]
-->barry

    There are currently three types of demo's.  Basic is a very well,
    basic site implementation of "The Art Store".  Simple is a not so
    very simple implementation of "The Art Store".  Barry is the
    newest demo.  It has the same feature set as Simple, but with the
    "Barry's Bikes, Books, and Birkenstocks" previously of Tallyman
    fame.  This is the one we will be working with.

<--# The email address where orders for this catalog should go.
<--# To have a secure catalog, either this should be a local user name and
<--# not go over the Internet -- or use the PGP option.
<--#


<--MailOrderTo? [orders@barry.com]
-->user@localhost.com

    The barry catalog is designed to email the orders once they are
    made to the person responsible for handling orders.

<--# Where the Interchange files for this catalog will go, pages,
<--# products, config and all.  This should not be in HTML document
<--# space! Usually a 'catalogs' directory below your home directory
<--# works well. Remember, you will want a test catalog and an online
<--# catalog.
<--#


<--CatRoot? [/home/user/catalogs/example]
-->/home/user/catalogs/example

    This is where the catalog config files and working data go.  The
    default location is a good place for this.

<--# The location of the normal CGI directory. This is a
<--# file path, not a script alias.
<--#
<--# If all of your CGI programs must end in .cgi, this is
<--# should be the same as your HTML directory.
<--#


<--CgiDir? [/usr/local/httpd/cgi-bin]
-->/usr/local/httpd/cgi-bin

  A file with you store's name will go into the cgi-bin dir.  This
  program (vlink or tlink) will provide the bridge between the web
  server and the Interchange server.

<--# The URL location of the CGI program, without the http://
<--# or server name.
<--#
<--# http://www.virtual.com/cgi-bin/prog
<--#                       ^^^^^^^^^^^^^
<--#
<--# http://www.virtual.com/program.cgi
<--#                       ^^^^^^^^^^^^
<--#


<--CgiUrl? [/cgi-bin/example]
-->/cgi-bin/example

    This is the URL to the cgi program for your catalog (example in
    this case).  This would be the script-alias in the httpd.conf set
    up for your cgi-bin.

<--#
<--# Additional URL locations for the CGI program, as with CgiUrl.
<--# This is used when calling the catalog from more than one place,
<--# perhaps because your secure server is not the same name as the
<--# non-secure one.
<--#
<--# http://www.secure.domain/secure-bin/prog
<--#                         ^^^^^^^^^^^^^^^^
<--#
<--# We set it to the name of the catalog by default to enable the
<--# internal HTTTP server.
<--#


<--Aliases? [/example]
-->/example

   This one is "beyond the scope of this document."  For the purposes
   of getting started, this option can be safely ignored.  For those
   who really want to know what it is for right now, see the
   documentation for minivend.cfg.


<--# The base directory for HTML for this (possibly virtual) domain.
<--# This is a directory path name, not a URL -- it is your HTML
<--# directory.
<--#


<--DocumentRoot? [/usr/local/httpd/htdocs]
-->/usr/local/httpd/htdocs

  This is the directory path to your html document root.  A number of
  static elements of your catalog will be stored here.

<--# Where the sample HTML files (not Interchange pages) should be
<--# installed. There is a difference.  Usually a subdirectory of
<--# your HTML directory.
<--#


<--SampleHtml? [/usr/local/httpd/htdocs/example]
-->/usr/local/httpd/htdocs/example

  Interchange will create a directory under the html document root in
  order to store the static html pages for the demo catalog.

<--# Where the image files should be copied. A directory path
<--# name, not a URL.
<--#


<--ImageDir? [/home/sonny/public_html/example/images]
-->/home/sonny/public_html/example/images

  Additionally, a place for the images.

<--# The URL base for the sample images. Sets the ImageDir
<--# directive in the catalog configuration file. This is a URL
<--# fragment, not a directory or file name.
<--#
<--#         <IMG SRC="/simple/images/icon.gif">
<--#                   ^^^^^^^^^^^^^^
<--#


<--ImageUrl? [/example/images]

   This is the URL for the images stored in the directory created
   above.  Interchange needs this in order to create <IMG SRC> tags
   for the catalogs dynamic pages.


<--Interchange can use either UNIX- or internet-domain sockets.
<--Most ISPs would prefer UNIX mode, and it is more secure.

<--If you already have a program there, or use a common program
<--and the FullURL directive, select NONE. You will then need
<--to copy the program by hand or otherwise ensure its presence.

<--INET or UNIX mode? [UNIX]
-->UNIX

    Again, this is outside fo this document's scope.  UNIX sockets
    will work just fine.

<--Do you use CGIWRAP or SUEXEC? [n]
-->n

    If you don't know the answer, no should be the right answer.

<--Checking directories........................................mkdir
/home/sonny/akopia/catalogs2/example
<--mkdir /home/sonny/public_html/example
<--mkdir /home/sonny/public_html/example/images
<--done.
<--Copying demo files..........................................found more to
ask.

   Doing stuff.

<--Your company name: .....................[Barry's Books]
<--Your company address: ..................[123 Any St.]
<--Your company city/state/zip: ...........[Anytown, USA 00000]
<--Your company phone: ....................[(555) 555-5555]
<--Your company fax number: ...............[(555) 555-5556]
<--Your company tollfree number (if any): ..[(888) 555-5555]

    Here are several questions concerning your store information.
    These are the defaults, you can change them if you like.

<--Interchange can do order pages in any way; two examples are provided.
<--The default is single-page.

<--Set to 1 to enable multi-page order screens: ..
-->1

    This demo catalog allows you to configure a single or multiple
    page order finalization.  The multiple page setup will break the
    confirmation process into several pages asking for shipping and
    billng address, payment info, and so forth.  The single page setup
    lumps all of this together on a longish page.

<--There are three color schemes available as an example of
<--how you might template catalogs. Select one of:
<--
<--  brown1  blue1  yellow1
<--
<--Select color scheme: ...................[green1]
-->blue1

    Three colorization templates are avaliable for your customizing
    pleasure.  These are designed around the demo catalog.

<--For the US, this is usually the state(s) your business is
<--located in. Non-US users will probably have to set this
<--differently depending on their tax laws.

<--Area(s) to tax in: .....................[VA UT]
-->VA UT

   List the states for which to calculate sales tax.

<--For US users, this looks like STATE=RATE, where the rate
<--is in percent. The default below taxes Ohio at 6% and
<--Illinois at 7.25 percent. More states can be added or
<--you can have only one. Should correspond to TAXAREA.

<--Percentage rate(s) for tax in different areas: ..[VA=7.5, UT=7.25]
-->VA=4.5 UT=6.35

    The percentage of tax to calculate for each state.

<--For the UPS lookup, the standard UPS tables are normally
<--used. If you want to add a handling charge, do it here.

<--Amount to add on to standard UPS costs: ..[3.00]
-->3.00

   Add this amount to the shipping charges for each order when using
   the ups shipping methods.

<--Origin zip code for UPS lookups: .......[00000]
-->83617

    UPS calculates shipping based from one zip code to another
    zipcode.  This zip is the one you would be shipping from.  If
    you'll be shipping from multiple locations, you'll need to consult
    the documentation or contact Akopia support.

<--Interchange has a workable internal database, but many things will
<--work better (and a few worse) if you use a SQL database. Interchange
<--can configure MySQL and Postgres in a test configuration.

<--Set to 1 if you want to use MySQL or Postgres: ..
-->0

    For the purposes of this document, we are going to use the
    Interchange internal database.  Consult the documentation for
    information about using your SQL database of choice.

<--You can use MiniMate, Interchange's companion configuration
<--interface, to do upload/download of files, manipulation of
<--the database, reconfiguration of the catalog, and much more.

<--To enable MiniMate, you will need a "super-user" account
<--name that has full access.

<--Account name that will control this catalog: ..[sonny]
-->user

    In this and all future versions, Minimate has been replaced with
    the Interchange administrative interface.  Tallyman users should
    find it very familiar since it's based on Tallyman's interface.
    See the Admin walkthrough below.  This gives the user with full
    administrative control of the catalog.

    The administrative password for [user] above is "pass".  This is a
    very weak password as I probably don't have to tell you.
    You should definitely change this -- use the
    Administrators->Change password function in the UI.

    
<--Found system commands to run.
    This may prompt you if you selected MySQL or Postgress. Otherwise
    it will be silent (and do nothing). If you selected Mysql or
    Postgres and this doesn't work, your catalog will probably
    not work.

<--done.
<--Moving link program to /usr/local/httpd/cgi-bin/example.....done.
<--Moving HTML files to /home/sonny/public_html/example........done.
<--Moving image files to /home/sonny/public_html/example/images..done.

    Doing some sutff.

<--Add catalog to minivend.cfg? [y]
-->y

    This will add your catalog to the list which Interchange will use
    when it starts up.

<--Done with installation. If my reading of your input is correct, you
<--should be able to access the demo catalog with the following URL:
<--
<--        http://localhost/example
<--
<--In any case, you should get direct access at:
<--
<--        http://localhost/cgi-bin/example
<--
<--That is, after you START or RESTART the Interchange server.  8-)
<--It is best done with:
<--
<--        /home/user/interchange/bin/interchange -r
<--
<--For session expiration, you might want to place a line like this in your
<--crontab:
<--
<--44 4 * * * /home/user/interchange/bin/expireall -r
<--
<--It will prevent the session databases from getting too large.


    That's it.  The demo store should be installed and ready to go.  Now
    you want to start the Interchange server:

        /home/user/interchange/bin/interchange -r

    You should see something like this:

Low traffic settings.
Calling UI....
....UI is loaded....
Interchange V4.5.x
Configuring catalog example...done.
Interchange server started in INET and UNIX mode(s) (process id 22200)

    At this point the Interchange server should be running and waiting
    for connections.

Show off demo store
    Some day we will expand this section.

The adminstrative side
    The administrative site has built-in context sensitive help.  If
    you want more detailed informaiton on how a particular section
    works, click on the "help" link in the upper right hand corner of
    the screen.  A help window will pop up and explain what's going on
    in that particular area.

    How to get there
        Go to http://localhost/cgi-bin/example/admin/logout.html
        changing whatever is necessary for your setup.  If you see an
        akopia interchange login prompt, that's a very good sign it
        worked.  If not, that is a good sign that it didn't work.

    Logging In
        When you installed the store, you set up a "super-user" and
        password for control of the administrative section.  This is
        it, enter the correct information and click login.

    The main page
        This is the front admin page.  From here you can access most
        of the other pages of the admin section.  Alternitively, you
        can click on Quicklinks which will provide a set of quick
        links to all of the administrative pages.

        Orders
            From here you can view a summary of all of the orders as
            well as select a particular order to view in complete
            detail.  This is the command center for viewing and
            managing the site's transaction information.

        Items
            Items are things in your inventory.  From this page, you
            can manipulate your product data -- pricing, descriptions,
            options, sku, weight, and category (do determine where it
            should appear in the site).

        Statistics
            Interchange keeps statsistcs on both order information and
            web site traffic.

        Customers
            Customer information can be managed from this interface.
            You can deactivate accounts or delete customers as well as
            view information about each one.

        Apply Changes
            Updates the Interchange system to apply your changes.  If
            you change a tax rate or a shipping option, for example, it
            won't affect the live site until you apply changes.

    Other pages
        You can get to these through the quicklinks, but not through
        the main page.    These are anticipated to be less used items
        mostly pertaining to system configuration.

        Affiliates
            The affiliates feature lets referral orders from other web
            sites be flagged and recorded for the purposes of reimbursing
            the affiliate or simply for research purposes.  Here, you
            can add or remove affiliates.  Traffic and order stats for
            affiliates can also be viewed from this interface.

        Site Layout
            This is for managing the layout of your store site.  This
            is mostly for content management purposes.

        Page Editor
            This lets you create and edit pages that will appear in your
            site.  You can select which template you'd like applied to
            a new page, and a filename, then create it, or edit an existing
            page.

        Search Builder
            Interchange searches can be constructed and executed from
            this interface.  This can be used for generating actual
            code for searches or just doing something you thought up
            but don't have an interface for.  The search builder can be
            considered the dynamic content engine for Interchange.

        Button Builder
            This interface is for generating buttons and links to
            Interchange componenets.

        Tax
            Tax definitions can be set up here.

        Shipping
            Shipping options are configured from this interface.
            Shipping tables can also be manipulated.

        Payment
            From this interfacce, you set which payment methods you
            accept or don't accept.

        File Manager
            This expands on the page builder functionality to let you not
            only edit pages, but view, upload, download, or edit any file
            in the site.

        Table import/export
            Tables can be imported into or experted from the interchange
            database.  Some of the tables you might want to import or
            export:  inventory, pricing, shipping info.

        Users
            A user is someone who has a set of permissions defined for
            accessing the administrative services.  Fine grained
            access controls can be set here.  For exmple, you may want
            to give warehouse staff access to check orders only, but
            not change item pricing information.

        Groups
            Access control groups can be set up with permissions to do
            certain administrative tasks.

        Permissions
            Permissions for users can be set up and maintaned from
            this interface.

        Environment
            Shows all of the current Interchange environment.

        Direct Table Edit
            Direct access to Interchanges tables is provided through
            this interface.

        Knar Editor
            The Knar is an acronym for "Knar's not a registry."  That
            is in fact exactly what it is.  A random collection of
            Interchange system variables and flags.

Interesting files
    minivend.cfg
    catalog.cfg

In future versions of this document:

where everything went
What's going on underneath the hood?
Anatomy of a catalog
Anatomy of a interchange page


