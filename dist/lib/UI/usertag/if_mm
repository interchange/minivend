
UserTag if-mm Order function name
UserTag if-mm addAttr
UserTag if-mm attrAlias key name
UserTag if-mm hasEndTag
UserTag if-mm Routine <<EOR
sub {
	my($func, $field, $opt, $text) = @_;

#::logDebug("if-mm: " . ::uneval(\@_));
	my $record;
	my $status;
	my $reverse;
	$text = 1 if ! $text;
  CHECKIT: {
	$reverse = $func =~ s/^\s*!\s*//;
	unless ($record = $Vend::UI_entry) {
		$status = $record, last CHECKIT unless ref($record = ui_acl_enabled());
	}
#::logDebug("if-mm record: " . Vend::Util::uneval_it($record));
	($status = 1, last CHECKIT) if $record->{super};
	$func = lc $func;
	$opt->{table} = $field if $func eq 'advanced';
	my $table = $opt->{table} ||
				$::Values->{mv_data_table};

	my %acl_func = qw/
						fields	fields
						field	fields
						columns	fields
						column	fields
						row		keys
						rows	keys
						key		keys
						keys	keys
						owner_field	owner_field
						owner	owner_field
					/;
	
	my %file_func = qw/
						page	pages
						file	files
						pages	pages
						files	files
					/;

	my %bool_func = qw/
						config   1
						reconfig 1
					/;

	my %paranoid = qw/
						mml             1
						sql             1
						report          1
						add_delete      1
						add_field       1
						journal_update  1
					/;
	my %yesno_func = qw/
						advanced  functions
						tables  tables
						table   tables
					/;

	my $acl;
	my $check;
	$status = 0, last CHECKIT if $func eq 'super';
	if($check = $file_func{$func}) {
		$status = 1, last CHECKIT unless $record->{$check};
		my $file = $field || $Global::Variable->{MV_PAGE};
		my @files =  UI::Primitive::list_glob($record->{$check}, $opt->{prefix});
#::logDebug("if-mm file/page: file=$file set=@files");
		if(! @files) {
			$status = '';
			last CHECKIT;
		}
		$status = ui_check_acl($file, join(" ", @files));
		last CHECKIT;
	}
	if($bool_func{$func} ) {
		$status = $record->{$func};
		last CHECKIT;
	}
	if($check = $yesno_func{$func} ) {
#::logDebug("if-mm yesno check: table=$table func=$func");
		my $v;
		if($paranoid{$table}) {
			if($v = $record->{"yes_$check"}) {
				$status = ui_check_acl($table, $v);
			}
			else {
				$status = 1;
			}
			if($v = $record->{"no_$check"}) {
				$status &&= ! ui_check_acl($table, $v);
			}
		}
		else {
			$status = 1;
			if($v = $record->{"no_$check"}) {
				$status = ! ui_check_acl($table, $v);
			}
		}
		last CHECKIT;
	}
	if(! ($check = $acl_func{$func}) ) {
#::logDebug("if-mm straight check: table=$table func=$func");
		my $default = $func =~ /^no_/ ? 0 : 1;
		$status = $default, last CHECKIT unless $record->{$func};
		$status = ui_check_acl($table, $record->{$func});
#::logDebug("if-mm straight check: table=$table func=$func status=$status reverse=$reverse");
		last CHECKIT;
	}

	# Now it is definitely a job for table_control;
	$acl = UI::Primitive::get_ui_table_acl($table);
#::logDebug("if-mm ACL check: table=$table func=$func check=$check status=$status reverse=$reverse");
#::logDebug("if-mm ACL check: ofield=$acl->{owner_field}");
#::logDebug("if-mm acl=" . Vend::Util::uneval_it($acl));

	$status = 1, last CHECKIT unless $acl;
	my $val;
	if($acl->{owner_field} and $check eq 'keys') {
#::logDebug("if-mm ACL check owner_field: table=$table field=$field check=$check ofield=$acl->{owner_field}");
		$status = ::tag_data($table, $acl->{owner_field}, $field)
					eq $Vend::Session->{ui_username};
		last CHECKIT;
	}
	elsif ($check eq 'owner_field') {
		$status = length $acl->{owner_field};
		last CHECKIT;
	}
	$status = UI::Primitive::ui_acl_atom($acl, $check, $field);
  }
#::logDebug("if-mm: func=$func field=$field status=$status reverse=$reverse");
	return $status
		? (
			Vend::Interpolate::pull_if($text, $reverse)
		  )
		: Vend::Interpolate::pull_else($text, $reverse);
}
EOR

