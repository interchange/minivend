Variable UI_STD_DBEDIT_HEAD <<EndOfVariable

[if cgi mv_data_table]
[value name=mv_data_table set="[cgi mv_data_table]" hide=1]
[else]
[value name=mv_data_table set="[calc]$Config->{ProductFiles}[0][/calc]" hide=1]
[/else]
[/if]

[if-mm !tables]
[seti ui_error]Not authorized for table [value mv_data_table].[/seti]
[bounce page="__UI_BASE__/error"]
[/if-mm]

[calc]
	if(! $CGI->{item_id}) {
		$CGI->{item_id} = 'new';
	}
	$Scratch->{arg} = $CGI->{item_id};
	return;
[/calc]

[if-mm function=keys name="[scratch arg]"]
[else][bounce href="[area admin/special/key_violation]"][/else]
[/if-mm]

[perl tables="[value mv_data_table]"]
my $table = $Values->{mv_data_table};
my $db = $Db{$table};
if(! $db) {
	$Scratch->{ui_error} = "Bad table '$table'.";
	$Tag->bounce( { page => '__UI_BASE__/error' } );
}

$Values->{ui_data_key_name} = $db->config('KEY');

$Values->{ui_data_fields} =
	$CGI->{ui_data_fields} ||
	$CGI->{mv_data_fields} ||
	$Values->{"$table:ui_data_fields"} || 
	join " ", $db->columns();

$Values->{ui_data_fields} =~ s/[,\0\s]+/ /g;


my @cols = split /[,\0\s]/, $Values->{ui_data_fields};
@cols = grep /:/ || $db->column_exists($_), @cols;

$Values->{ui_data_fields} = $CGI->{ui_data_fields} = join " ", @cols;
return;

[/perl]

[set process_filter]
[perl]
	my @filters = grep /^ui_filter:/, keys %$CGI;
	return unless @filters;
	foreach my $key (@filters) {
		my $val = delete $CGI->{$key};
		$key =~ s/ui_filter://;
		next unless $val;
		next unless defined $CGI->{$key};
		$CGI->{$key} = $Tag->filter($val, $CGI->{$key}, $key);
	}
	return;
[/perl]
[/set]

EndOfVariable
