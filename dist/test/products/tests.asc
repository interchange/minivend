code
%%
input
%%
expected
%%
no_expect
%%
actual
%%
description
%%%
000001
%%
[flag type=write table=inventory]
[flag type=write table=pricing]
[tag op=time send=1]%D[/tag]
%%
\d\d/\d\d/\d\d
%%

%%

%%
Set up some flag writes, test [tag op=time]
%%%
000002
%%
[set mv_no_count]1[/set]
[set mv_no_session_id]1[/set]
This should NOT have a session id and count [area test]<P>
%%
^[^?]+$
%%

%%

%%
Test mv_no_count and mv_no_session_id
%%%
000003
%%
Variable: @@TEST_VARIABLE@@
%%
Test of global variable OK.
%%

%%

%%
Test of global variables.
%%%
000004
%%
[set name=nothing send=1][/set]
%%
^$
%%

%%

%%
Test of set to blank.
%%%
000005
%%
[mvasp]
 This is <B>HTML</B>, but now it has <% $Document->write('PERL' . ' ' . 'CODE') %> inside.
[/mvasp]
%%
PERL CODE
%%

%%

%%
Test MVASP.
%%%
000006
%%
[perl send=1 tables=products]
$var = tag_data('products', 'title', '00-0011');
return $var ? "O" . "K - $var" : 'ERROR';
[/perl]
%%
Mona
%%
XX
%%

%%
Test tag_data().
%%%
000007
%%
[set mv_no_count]0[/set]
[set mv_no_session_id]0[/set]
This should have a session id and count [area test]
%%
.*?mv_
%%

%%

%%
test turning off mv_no_count / mv_no_session_id
%%%
000008
%%
[perl subs=1] test_global_sub('O' . 'K') [/perl]
%%
OK
%%

%%

%%
Call of global_sub
%%%
000009
%%
[try]
	[calc] 2 / 0 [/calc]
[/try]
[catch] There was an error -- $@ [else] No error[/else][/catch]
%%
There was an error
%%
No error
%%

%%
Try/catch on error
%%%
000010
%%
[try]
	[calc] 1/1; [/calc]
[/try]
[catch] There was an error -- $@ [else] No error[/else][/catch]
%%
No error
%%
There was an error
%%

%%
Try/catch no error
%%%
000011
%%
[filter lc]UPPERCASE[/filter]
%%
^[a-z\s]+$
%%
[A-Z]
%%

%%
Lowercase filter
%%%
000012
%%
[filter uc]lowercase[/filter]
%%
^[A-Z\s]+$
%%
[a-z]
%%

%%
Uppercase filter
%%%
000013
%%
[filter digits_dot]Abc 9.8[/filter]
%%
^[\d.]+$
%%
[^\d.]
%%

%%
Digits/dot filter
%%%
000014
%%
[filter entities]<A HREF=this.html>[itl tag][/filter]
%%
&lt;.*&gt;.*&#91
%%
[<>\[]
%%

%%
Entities filter
%%%
000015
%%
[calc]$CGI->{something} = '[' . "the value]"; return; [/calc][cgi something]
%%
&#91;the value]
%%
\[
%%

%%
CGI blocking left square bracket
%%%
000016
%%
[calc]$Values->{something} = '[' . "the value]"; return; [/calc][value something]
%%
&#91;the value]
%%
\[
%%

%%
Value blocking left square bracket
%%%
000017
%%
[area form=auto abc=def ghi=jkl]
%%
abc=def.ghi=jkl|ghi=jkl.abc=def
%%

%%

%%

%%%
000018
%%
[set foo]bar[/set][scratchd foo][scratch foo]
%%
bar
%%
barbar
%%

%%
Scratchd tag
%%%
000019
%%
[fly-list 00-0011][item-description][/fly-list]
%%
MONA LISA
%%

%%

%%
Fly-list tag
%%%
000020
%%
[sql query="select artist from products where category like 'Americana'" tolerant-like=1][sql-param artist] [/sql]
%%
Grant Wood The Art Store Jean Langan
%%

%%

%%
[sql]  and [sql-param]
%%%
000021
%%
[sql query="select * from products where category like '%Americana%'"][sql-field artist] [/sql]
%%
Grant Wood The Art Store Jean Langan
%%

%%

%%
[sql]  and [sql-field]
%%%
000022
%%
[calc] $Carts->{main} = [{
							code => 'onfly', mv_price => 5,
							description => 'Zum description',
							quantity => 1,
						}]; return;[/calc]
[item-list][item-description][/item-list]
%%
Zum descrip
%%

%%

%%
On-the-fly part description
%%%
000023
%%
[calc] $Carts->{main} = [{
							code => 'onfly',
							mv_price => 5,
							description => 'Zum description',
							quantity => 1,
							foo => 'bar',
						}]; return;[/calc]
[item-list][item-field foo][/item-list]
%%
bar
%%

%%

%%
On-the-fly arbitrary fields
%%%
000024
%%
[calc] $Carts->{main} = [{
							code => 'onfly',
							mv_price => 5,
							description => 'Zum description',
							foo => 'bar',
							quantity => 1,
						}];
						$Config->{OnFly} = 1;
						return;[/calc]
[item-list][item-price][/item-list]
%%
5\.00
%%

%%

%%
On-the-fly pricing (requires $ in CommonAdjust)
%%%
000025
%%
[accessories 99-102 size]
%%
XL
%%
accessories
%%

%%

%%%
000026
%%
[accessories code="99-102" arg="size"]
%%
XL
%%
accessories
%%

%%

%%%
000027
%%
[area href="pg" arg="argument"]
%%
/pg.*mv_arg=arg
%%
>
%%

%%

%%%
000028
%%
[page href="pg"  arg="argument"]
%%
/pg.*mv_arg=arg.*>
%%

%%

%%

%%%
000029
%%
[page pg argument]
%%
/pg.*mv_arg=arg.*>
%%

%%

%%

%%%
000030
%%
[area pg argument]
%%
/pg.*mv_arg=arg
%%
>
%%

%%

%%%
000031
%%
[calc]
$value = '[counter value=1 start=1]';
$newvalue = '[counter]';
return 'EQUAL' if $value + 1 == $newvalue;
[/calc]
%%
EQUAL
%%

%%

%%

%%%
000032
%%
[loop delimiter="|" lr=1 head_skip=1 list="
code|value
a|1
b|2
"][loop-code]=[loop-pos 0]=[loop-param code] [loop-pos 1]=[loop-param value]
[/loop]
%%
a=a=a 1=1
b=b=b 2=2
%%

%%

%%

%%%
000033
%%
7=[calc] 4 + 3 [/calc]
%%
7=7
%%
[a-z]
%%

%%

%%%
000034
%%
[value name=var_name set=on hide=1] [selected var_name on]
%%
SELECTED
%%

%%

%%

%%%
000035
%%
[value name=var_name set=1 hide=1] [selected var_name on]
%%

%%
SELECTED
%%

%%

%%%
000036
%%
[value name=var_name set="A value with stuff in't" hide=1] [selected var_name a value with stuff in't] [selected name=var_name value="a value with stuff in't"]
%%
SELECTED\s+SELECTED
%%

%%

%%

%%%
000037
%%
[value name=var_name set=on hide=1] [selected name=var_name value=on]
%%
SELECTED
%%

%%

%%

%%%
000038
%%
[value name=var_name set=on hide=1] [checked var_name on]
%%
CHECKED
%%

%%

%%

%%%
000039
%%
[value name=var_name set=1 hide=1] [checked var_name on]
%%

%%
CHECKED
%%

%%

%%%
000040
%%
[value name=var_name set="A value with stuff in't" hide=1] [checked name=var_name value="a value with stuff in't"]
%%
CHECKED
%%

%%

%%

%%%
000041
%%
[value name=var_name set=on hide=1] [checked name=var_name value=on]
%%
CHECKED
%%

%%

%%

%%%
000042
%%
[calc] q{[read-cookie MV_SESSION_ID]} =~ /^$Session->{id}/ ; [/calc]
%%
^1$
%%

%%

%%
Read-cookie tag
%%%
000043
%%
[scratch fooer][tmp fooer]barer[/tmp][scratch fooer]
%%
barer$
%%
barerbarer
%%

%%
tmp tag, second click tests
%%%
000044
%%
works on second click: [set-cookie name=WORKS_ON_SECOND_CLICK value="testfoo"][read-cookie WORKS_ON_SECOND_CLICK]
%%
testfoo
%%

%%

%%
Set cookie, works on second click
%%%
000045
%%
[scratch foobaby][tmpn foobaby][cgi whatever][/tmpn][scratch foobaby]
%%
.cgi whatever
%%
cgi.*cgi
%%

%%

%%%
000046
%%
[row 50]
[col 48 wrap=yes]ONE_LINE__ XXXXXXXXXX XXXXXXXXXX XXXXXXXXXX[/col]
[/row]
%%
ONE_LINE__ XXXXXXXXXX XXXXXXXXXX XXXXXXXXXX
%%

%%

%%

%%%
000047
%%
[row 40]
[col 38 wrap=yes]3_AND_1___ XXXXXXXXXX XXXXXXXXXX XXXXXXXXXX[/col]
[/row]
%%
3_AND_1___ XXXXXXXXXX XXXXXXXXXX
XXXXXXXXXX
%%

%%

%%

%%%
000048
%%
[row 30]
[col 28 wrap=yes]2_AND_2___ XXXXXXXXXX XXXXXXXXXX XXXXXXXXXX[/col]
[/row]
%%
2_AND_2___ XXXXXXXXXX
XXXXXXXXXX XXXXXXXXXX
%%

%%

%%

%%%
000049
%%
[row 20]
[col 18 wrap=yes]FOUR_LINES XXXXXXXXXX XXXXXXXXXX XXXXXXXXXX[/col]
[/row]
%%
FOUR_LINES
XXXXXXXXXX
XXXXXXXXXX
XXXXXXXXXX
%%

%%

%%

%%%
000050
%%
[row 85]
[col 16 align=right gutter=0]Align right[/col]
[col 1 gutter=0]-[/col]
[col 16 align=left]Align left[/col]
[col 12 gutter=2 wrap=yes align=right]gutter 22[/col]
[col 1 gutter=0]2[/col]
[col 12 gutter=1 wrap=yes align=right]gutter 1[/col]
[col 1 gutter=0]1[/col]
[col 12 gutter=0 wrap=yes align=right]gutter 0[/col]
[col 1 gutter=0]0[/col]
[/row]
%%
Align right.Align left.*gutter 22  2.*gutter 1 1.*gutter 00
%%

%%

%%

%%%
000051
%%
[currency]8999.876512 [/currency]
%%
8,999\.88
%%

%%

%%

%%%
000052
%%
[data table=inventory col=qty key=99-102 value=1]
[data inventory qty 99-102]
[data table=inventory col=qty key=99-102 increment=1]
[data inventory qty 99-102]
%%
1\s+1\s+2\s+2
%%

%%

%%

%%%
000053
%%
[description 00-0011]
%%
MONA
%%
XX
%%

%%

%%%
000054
%%
[description 00-0011 products]
%%
MONA
%%
XX
%%

%%

%%%
000055
%%
[description 00-0011 products2]
%%
XX
%%

%%

%%

%%%
000056
%%
[discount ALL_ITEMS][/discount]
[discount ENTIRE_ORDER][/discount]
[discount 00-0011][/discount][perl]
$Carts->{main} = [ { code => '00-0011', quantity => 1, mv_ib => 'products'} ];
return '';
[/perl]
[item-list main][item-price][/item-list]
[subtotal cart=main noformat=1]
%%
50,000,000[\s\S]+50000000
%%

%%

%%

%%%
000057
%%
[discount ALL_ITEMS][/discount]
[discount ENTIRE_ORDER][/discount]
Set discount to 10% for that item.
[discount 00-0011]$s * .90[/discount]
Price=[price 00-0011] Total=[subtotal]
%%
50,000,000.*45,000,000
%%

%%

%%

%%%
000058
%%
[discount ALL_ITEMS][/discount]
[discount ENTIRE_ORDER][/discount]
[discount 00-0011]$s * .90[/discount]
Price=[price code=00-0011 discount=1 noformat=1] Total=[subtotal noformat=1]
%%
Price=45000000 Total=45000000
%%

%%

%%

%%%
000059
%%
[discount ALL_ITEMS][/discount]
[discount ENTIRE_ORDER][/discount]
Return discount to 0.  [discount 00-0011][/discount]
Price=[price code=00-0011 discount=1 noformat=1] Total=[subtotal noformat=1]
%%
Price=50000000 Total=50000000
%%

%%

%%

%%%
000060
%%
[discount ALL_ITEMS][/discount]
[discount ENTIRE_ORDER][/discount]
Half off with mv_discount.  [perl]
$Carts->{main}[0]{mv_discount} = q{ $s * .50 };
return '';
[/perl] 
Price=[item-list main][item-price noformat=1][/item-list] Total=[subtotal cart=main noformat=1]
Return to normal.  [perl]
delete $Carts->{main}[0]{mv_discount};
return '';
[/perl] 
%%
Price=50000000 Total=25000000
%%

%%

%%

%%%
000061
%%
Half off entire order.  [discount ENTIRE_ORDER]$s * .50[/discount]
[discount ALL_ITEMS][/discount]
[discount 00-0011][/discount]
Price=[price code=00-0011 noformat=1 discount=1] Total=[subtotal noformat=1]
%%
Price=50000000 Total=25000000
%%

%%

%%

%%%
000062
%%
[discount ENTIRE_ORDER][/discount]
Half off ALL_ITEMS  [discount ALL_ITEMS]$s * .50[/discount]
[discount 00-0011][/discount]
Price=[price code=00-0011 noformat=1 discount=1] Total=[subtotal noformat=1]
%%
Price=25000000 Total=25000000
%%

%%

%%

%%%
000063
%%
All three...
[discount ENTIRE_ORDER]$s * .50[/discount]
[discount ALL_ITEMS]$s * .50[/discount]
[discount 00-0011]$s * .50[/discount]
Price=[price code=00-0011 noformat=1 discount=1] Total=[subtotal noformat=1]
%%
Price=12500000 Total=6250000
%%

%%

%%

%%%
000064
%%
In products 1: [field title 00-342] In products 2: [field title X0-342]
%%
In products 1: The Starry Night In products 2: 2-The Starry Night
%%

%%

%%

%%%
000065
%%
In products 1: [field name=title code=00-342] In products 2: [field name="title" code="X0-342"]
%%
In products 1: The Starry Night In products 2: 2-The Starry Night
%%

%%

%%

%%%
000066
%%
FILE
[file etc/order.number]
[file name="etc/order.number"]
%%
#COUNTER[\s\S]+#COUNTER
%%

%%

%%

%%%
000067
%%
IF ! CONFIG
[if !config FramesDefault == 1]
OK.
[else]Fell through to else, ERROR. [/else]
[/if]
%%
OK
%%
ERROR
%%

%%

%%%
000068
%%
IF CONFIG
[if type="!config" term=Cookies op="==" compare=1]
ERROR
[else]OK[/else]
[/if]
%%
OK
%%
ERROR
%%

%%

%%%
000069
%%
IF CONFIG
[if type="!config" term=Cookies op="!=" compare=1]
OK
[else] ERROR [/else][/if]
%%
OK
%%
ERROR
%%

%%

%%%
000070
%%
AND OR
[set true]1[/set]
[set false]0[/set]
[if scratch false == 0][and scratch false == 1]ERROR[else]OK[/else][/if]
[if scratch false][or scratch true]OK[else]ERROR[/else][/if]
[if scratch true][and scratch false][or scratch true]OK[else]ERROR[/else][/if]
%%
OK
%%
ERROR
%%

%%

%%%
000071
%%
AND OR NAMED
[set true]1[/set]
[set false]0[/set]
[if base=scratch term=false op="==" comp=0][and base=scratch term=false op="==" compare=1]ERROR[else]OK[/else][/if]
[if base=scratch term=false][or base=scratch term=true]OK[else]ERROR[/else][/if]
[if base=scratch term=true][and base=scratch term=false][or base=scratch term=true]OK[else]ERROR[/else][/if]
%%
OK
%%
ERROR
%%

%%

%%%
000072
%%
IF CONFIG AGAIN
[if config FramesDefault == 1]
Frames are on -- ERROR
[elsif config TaxShipping eq 'OH']
OK.
[/elsif]
[else]Fell through to else, ERROR. [/else]
[/if]
%%
OK
%%
ERROR
%%

%%

%%%
000073
%%
IF EXPLICIT NEST
[if type=explicit compare=1]
OK 1.
[if config Cookies eq 'neavairbe']
Nesting tested, but failed with if ERROR.<BR>
[else] Nest OK.[/else]
[/if]
[/if]
%%
OK
%%
ERROR
%%

%%

%%%
000074
%%
IF EXPLICIT NEST
[if explicit][condition] 1 == 0 [/condition]
ERROR[else]OK 2.[/else][/if]
[if explicit][condition] 1 == 1 [/condition]
OK 3.[else]ERROR[/else][/if]
%%
OK
%%
ERROR
%%

%%

%%%
000075
%%
EXPLICIT
[if type=explicit compare="1"]
[then]
OK 1.
[if type=config term=Cookies op=ne compare=neavairbe]
    Nest OK 2.
    [else]Fell through to else, Error.[/else]
[/if]
[/then]
[else]ERROR[/else]
[/if]
[if type=explicit][condition]1 == 0[/condition]
3 Then, ERROR.
[elsif type=explicit][condition] 0 == 0[/condition]
OK 3.
[/elsif]
[else]Fell through to else, ERROR. [/else]
[/if]
%%
OK
%%
ERROR
%%

%%

%%%
000076
%%
IF DATA POS
[if data products::nontaxable::99-102 =~ /^(y|t|1)/i]
ERROR[else]OK[/else][/if] 1.
[if data products::nontaxable::00-0011a]
OK[else]ERROR[/else][/if] 2.
%%
OK
%%
ERROR
%%

%%

%%%
000077
%%
IF DATA NAMED
[if type=data term=products::nontaxable::99-102 op="=~" compare="/^[yt1]/i"]
ERROR[else]OK[/else][/if] 1.
[if type=data term=products::price::00-0011a op="<" compare=1001]
OK[else]ERROR[/else][/if] 2.
%%
OK
%%
ERROR
%%

%%

%%%
000078
%%
IF DISCOUNT
[discount 00-0011]9.95[/discount]
[if discount 00-0011 < 10]OK[else]ERROR[/else][/if] with.
[discount 00-0011][/discount]
[if discount 00-0011]ERROR[else]OK[/else][/if] without.
%%
OK
%%
ERROR
%%

%%

%%%
000079
%%
IF DISCOUNT NAMEd
[discount 00-0011]9.95[/discount]
[if type=discount term=00-0011 op=< comp=10]OK[else]ERROR[/else][/if] with.
[discount 00-0011][/discount]
[if discount 00-0011]ERROR[else]OK[/else][/if] without.
%%
OK
%%
ERROR
%%

%%

%%%
000080
%%
IF FILE
[if file /etc/passwd]OK[else]ERROR[/else][/if] 1.
[if file etc/nevairbe.counter]ERROR[else]OK[/else][/if] 2.
%%
OK
%%
ERROR
%%

%%

%%%
000081
%%
IF FILE POS
[if type=file term=/etc/passwd]OK[else]ERROR[/else][/if] 1.
[if type=file term=etc/nevairbe.counter]ERROR[else]OK[/else][/if] 2.
%%
OK
%%
ERROR
%%

%%

%%%
000082
%%
IF ITEMS POS
[perl]$Items = $Carts->{main} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
[if items main]OK[else]ERROR[/else][/if] 1.
[perl]$Items = $Carts->{main} = [ ]; return '';[/perl]
[if items main]ERROR[else]OK[/else][/if] 2.
[perl]$Carts->{layaway} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
[if items layaway]OK[else]ERROR[/else][/if] 3.
[perl]$Carts->{layaway} = [ ]; return '';[/perl]
[if items layaway]ERROR[else]OK[/else][/if] 4.
%%
OK
%%
ERROR
%%

%%

%%%
000083
%%
IF ITEMS NAMED
[perl]$Items = $Carts->{main} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
[if type=items term=main]OK[else]ERROR[/else][/if] 1.
[perl]$Items = $Carts->{main} = [ ]; return '';[/perl]
[if type=items term=main]ERROR[else]OK[/else][/if] 2.
[perl]$Carts->{layaway} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
[if type=items  term=layaway]OK[else]ERROR[/else][/if] 3.
[perl]$Carts->{layaway} = [ ]; return '';[/perl]
[if type=items term=layaway]ERROR[else]OK[/else][/if] 4.
%%
OK
%%
ERROR
%%

%%

%%%
000084
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
[if ordered 00-0011]OK[else]ERROR[/else][/if] 1.
[if type=ordered term=00-0011]OK[else]ERROR[/else][/if] 1.
[if !ordered 00-0011]ERROR[else]OK[/else][/if] 2.
[if type="!ordered" term=00-0011]ERROR[else]OK[/else][/if] 2.
[perl]$Carts->{main} = [  ]; return '';[/perl]
[if ordered 00-0011]ERROR[else]OK[/else][/if] 3.
[if type=ordered term=00-0011]ERROR[else]OK[/else][/if] 3.
%%
OK
%%
ERROR
%%

%%

%%%
000085
%%
[set OH]3[/set]
[if scratch OH > 0]OK[else]ERROR[/else][/if] 1.
[if scratch OH]OK[else]ERROR[/else][/if] 2.
[set OH]-1[/set]
[if scratch OH > 0]ERROR[else]OK[/else][/if] 3.<BR>
[set name=OH]3[/set]
[if type=scratch term=OH op=> comp=0]OK[else]ERROR[/else][/if] 1.
[if type=scratch term=OH]OK[else]ERROR[/else][/if] 2.
[set name=OH]-1[/set]
[if type=scratch term=OH op=> comp=0]ERROR[else]OK[/else][/if] 3.<BR>
%%
OK
%%
ERROR
%%

%%

%%%
000086
%%
[if validcc 5959595959595959 mc 12/08]OK[else]ERROR[/else][/if] 1.
[if validcc 5959595959595958 mc 12/08]ERROR[else]OK[/else][/if] 2.
[if validcc 5959595959595959 mc 12/94]ERROR[else]OK[/else][/if] 3.
[if type=validcc term=5959595959595959 op="mc" comp=12/08]OK[else]ERROR[/else][/if] 1.
[if type=validcc term=5959595959595958 op=mc comp=12/08]ERROR[else]OK[/else][/if] 2.
[if type=validcc term=5959595959595959 op=mc comp=12/94]ERROR[else]OK[/else][/if] 3.
%%
OK
%%
ERROR
%%

%%

%%%
000087
%%
[perl]$Values->{test_var} = 'whatever'; return ''[/perl]
[if value test_var]OK[else]ERROR[/else][/if] 1.
[if value test_var ne whatever]ERROR[else]OK[/else][/if] 2.
[if type=value term=test_var]OK[else]ERROR[/else][/if] 1.
[if type=value term=test_var op=ne comp="whatever"]ERROR[else]OK[/else][/if] 2.
[perl]$Values->{test_var} = 11; return ''[/perl]
[if value test_var != 11]ERROR[else]OK[/else][/if] 3.
[if value test_var == 11]OK[else]ERROR[/else][/if] 4.<BR>
[if type=value term=test_var op="!=" comp=11]ERROR[else]OK[/else][/if] 3.
[if type=value term=test_var == comp=11]OK[else]ERROR[/else][/if] 4.<BR>
%%
OK
%%
ERROR
%%

%%

%%%
000088
%%
[loop prefix=tloop search="
    se=renaissance
    fi=products
    rf=code,title
"]
[tloop-sub testing]return "$_[0] " . $_[1]->[1] [/tloop-sub]
[tloop-data products2 title]
[tloop-field title]
[tloop-price]
[tloop-increment]
[tloop-calc] return 'CALC OK' [/tloop-calc]
[tloop-exec testing]SUB OK -- title is[/tloop-exec]
[/loop]
%%
Mona Lisa
Mona Lisa
.50,000,000.00
1
CALC OK
SUB OK -- title is Mona Lisa
%%

%%

%%

%%%
000089
%%
[loop prefix=aloop list="x y z"]Code: [aloop_code] [loop prefix=bloop list="1 2 3"] [aloop-code][bloop-code] [/loop]
[/loop]
%%
Code:\s+x\s+x1\s+x2\s+x3\s+Code:\s+y\s+y1\s+y2\s+y3\s+Code:\s+z\s+z1\s+z2\s+z3
%%
ERROR
%%

%%

%%%
000090
%%
[perl]$Items = $Carts->{main} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
 1 item: [nitems]
[perl]$Carts->{layaway} = [ { qw/code 00-0011 quantity 10/ } ]; return '';[/perl]
Layaway 10 items: [nitems layaway]
[perl]$Carts->{layaway} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
Layaway 10 items: [nitems layaway]
%%
item: 1\s+Layaway 10 items: 10\s+Layaway 10 items: 1\s*$
%%
ERROR
%%

%%

%%%
000091
%%
[perl]$Carts->{layaway} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
Layaway item list: [item-list layaway][item-code] [item-description][/item-list]
[perl]$Carts->{layaway} = [ ]; return '';[/perl]
Empty layaway, should be nothing -- [item-list layaway]ERROR[/item-list]
%%
MONA LISA
%%
ERROR
%%

%%

%%%
000092
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1/ } ]; return '';[/perl]
[item-list]
If-field: [if-field price]OK[else]ERROR[/else][/if-field] 1. [if-field junk]ERROR[else]OK[/else][/if-field] 2.
If-data: [if-data pricing price]OK[else]ERROR[/else][/if-data] 1. [if-data pricing junk]ERROR[else]OK[/else][/if-data] 2.
If-field NOT: [if-field ! price]ERROR[else]OK[/else][/if-field] 1. [if-field ! junk]OK[else]ERROR[/else][/if-field] 2.
If-data NOT: [if-data ! pricing price]ERROR[else]OK[/else][/if-data] 1. [if-data ! pricing junk]OK[else]ERROR[/else][/if-data] 2.
[/item-list]
%%
OK
%%
ERROR
%%

%%

%%%
000093
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
Code:[item-list] [item-code] [/item-list]
%%
00-0011
%%
Carts
%%

%%

%%%
000094
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Data: [item-list] [item-data pricing price] [/item-list]
%%
price data ok
%%

%%

%%

%%%
000095
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Description: [item-list] [item-description] [/item-list]
%%
MONA LISA
%%

%%

%%

%%%
000096
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Field: [item-list] [item-field price] [/item-list]
%%
50000000
%%

%%

%%

%%%
000097
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Increment: [item-list] [item-increment] [/item-list]
%%
Increment: +1 *$
%%

%%

%%

%%%
000098
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Modifier: [item-list] [item-modifier foo] [/item-list]
%%
bar
%%

%%

%%

%%%
000099
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Modifier name: [item-list] [modifier-name foo] [/item-list]
%%
foo0
%%

%%

%%

%%%
000100
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Price: [item-list] [item-price] [/item-list]
%%
50,000,000\.00
%%

%%

%%

%%%
000101
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Price 10: [item-list] [item-price] [/item-list]
%%
:.*50,000,000\.00 *$
%%

%%

%%

%%%
000102
%%
[perl]undef $Session->{discount}; $Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
(Unformatted): [item-list]  [item-price noformat] [/item-list]
%%
: +50000000 *$
%%

%%

%%

%%%
000103
%%
[perl]undef $Session->{discount}; $Carts->{main} = [ { qw/code 00-0011 quantity 2 foo bar / } ]; return '';[/perl]
[cart main]
Subtotal: [item-list main] [item-subtotal] [/item-list]
%%
100,000,000\.00
%%

%%

%%

%%%
000104
%%
[perl]undef $Session->{discount}; $Carts->{main} = [ { qw/code 00-0011 quantity 2 foo bar / } ]; return '';[/perl]
[cart main]
Subtotal (unformatted): [item-list]  [item-subtotal noformat] [/item-list]
%%
100000000
%%

%%

%%

%%%
000105
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 5 foo bar / } ]; return '';[/perl]
[cart main]
Quantity: [item-list] [item-quantity] [/item-list]
%%
5
%%

%%

%%

%%%
000106
%%
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
Quantity name: [item-list] [quantity_name] [/item-list]
%%
quantity0
%%

%%

%%

%%%
000107
%%
[discount ALL_ITEMS] $s * .50[/discount]
[perl]$Carts->{main} = [ { qw/code 00-0011 quantity 1 foo bar / } ]; return '';[/perl]
[cart main]
[item-list]Discount price: [discount-price]
Discount: [item-discount][/item-list]
%%
25,000,000[\s\S]+25,000,000
%%

%%

%%

%%%
000108
%%
[value name=junk set=Americana hide=1]
[loop list="00-0011 34-101" option="junk products::category"]<OPTION>[loop-field category][/loop]
%%
<OPTION>Renaissance<OPTION SELECTED >Americana
%%

%%

%%

%%%
000109
%%
[value name=junk set=Americana hide=1]
[loop list="00-0011 34-101" option="junk products::category"]<OPTION VALUE="[loop-code]">[loop-field category][/loop]
%%
<OPTION VALUE="00-0011">Renaissance<OPTION SELECTED VALUE="34-101">Americana
%%

%%

%%

%%%
000110
%%
[value name=junk set=Americana hide=1]
[loop list="Renaissance Americana" option="junk"]<OPTION>[loop-code][/loop]
%%
<OPTION>Renaissance<OPTION SELECTED >Americana
%%

%%

%%

%%%
000111
%%
[perl pricing]
my $db = $Db{pricing};
my @out;
push @out, $db->record_exists('00-0011') ? 'OK' : 'ERROR db->record_exists';
push @out, $db->column_exists('price5') ? 'OK' : 'ERROR db->column_exists';
push @out, $db->set_field('junk_row', 'price5', 100) eq '100' ? 'OK' : 'ERROR db->set_field';
push @out, $db->field('junk_row', 'price5') eq '100' ? 'OK' : 'ERROR db->field';
my $ref = $db->row_hash('junk_row');
if(! $ref) {
    push @out, 'ERROR db->row_hash no ref';
}
elsif (ref($ref) !~ /HASH/) {
    push @out, 'ERROR db->row_hash not ref';
}
elsif ($ref->{price5} == 100) {
    push @out, 'OK';
}
else {
    push @out, 'ERROR db->row_hash != 100';
}
push @out, $db->delete_record('junk_row') ? 'OK' : 'ERROR db->delete';
return join " ", @out;
[/perl]
%%
OK OK OK OK OK OK
%%
ERROR

%%

%%
Test database functions from embedded perl.
%%%
000112
%%
[mvasp]
<%
	$Document->write('OK');
%>
[/mvasp]
%%
OK
%%
Document|ERROR
%%

%%
Test of miscellaneous embedded Perl functions.
%%%
000113
%%
[log file=">testlog" type=text]Test of log.[/log][file testlog]
%%
Test of log.
%%
Test of log[\s\S]*log
%%

%%
log tag with implicit create option.
%%%
000114
%%
[log file="testlog" create=1 type=text]Test of log.[/log][file testlog]
%%
Test of log.
%%
Test of log[\s\S]*log
%%

%%
log tag with explicit create option.
%%%
000115
%%
[log file="testlog" type=text]Test of log.[/log][file testlog]
%%
Test of log[\s\S]*log
%%
^Test of log.\s*$
%%

%%
log tag in normal append mode.
%%%
000116
%%
[perl]$Config->{DescriptionField} = 'price'; return; [/perl]
[description 00-0011]
[perl]$Config->{DescriptionField} = 'description'; return; [/perl]
[description 00-0011]
%%
5000+\s+.*MONA
%%
^\s*MONA
%%

%%
Test DescriptionField directive.
%%%
000117
%%
[perl]
	@{$Carts->{main}} = ();
	$Config->{AutoModifier} = ['category'];
	$CGI->{mv_order_item} = '00-0011';
	return;
[/perl]
[update values]
[item-list][item-code] [item-modifier category][/item-list]
%%
Renaissance
%%
^\s*$]
%%

%%
Test AutoModifier.
%%%
000118
%%
[db-columns table=products]
%%
code\s+description\s+title\s+artist\s+comment\s+display\s+image\s+price\s+category\s+nontaxable\s+weight\s+size\s+color\s+related
%%

%%

%%
UI db-columns tag.
%%%
000119
%%
[filter op=strip]

	something

[/filter]
%%
^something$
%%
\s+
%%

%%
Strip filter.
%%%
000120
%%
[filter op="strip digits"]

	something123

[/filter]
%%
^\d+$
%%
\D
%%

%%
digits filter.
%%%
000121
%%
[filter op="strip word"]

	something 123

[/filter]
%%
^\w+$
%%
\s
%%

%%
digits filter.
%%%
000122
%%
[filter op="strip urlencode"]

	something123?=

[/filter]
%%
^something123\%3f\%3d$
%%
=
%%

%%
urlencode filter.
%%%
000123
%%
[filter op="strip filesafe"]

	something123>

[/filter]
%%

%%
>
%%

%%
filesafe filter.
%%%
000124
%%
[calc]$Values->{testing} = "\0test works"; return; [/calc]
![value filter="nullselect" name=testing]!
%%
!test works!
%%
\0
%%

%%
digits filter.
%%%
000125
%%
[filter op="strip currency"]

	123

[/filter]
%%
^.123.00$
%%
^\s*\d+\s*$
%%

%%
currency filter.
%%%
000126
%%
[filter op="strip 4"]

	something123

[/filter]
%%
^....$
%%
\d
%%

%%
length filter.
%%%
000127
%%
[filter op="strip commify.0"]

	123456

[/filter]
%%
^123,456$
%%
^\s*\d+\s*$
%%

%%
Commify filter, filter args.
%%%
000128
%%
[perl]
    $MVSAFE::Safe = 1;
	    my $hash = { hash => { key => 'OK' } };

		my $text = <<EOF;
{key2 ERROR}
{key2?}ERROR{/key2?}
{key:}ERROR{/key:}
{key|ERROR}
{key2|OK}
{key2:}OK{/key2:}
{key OK}
{key?}OK{/key?}
EOF
		return $Tag->attr_list($hash, $text);
[/perl]
%%
^\s*OK\s+OK\s+OK\s+OK\s+\OK\s*$
%%
ERROR
%%

%%
attr_list test
%%%
000129
%%
[assign clear=1]
[value name=mv_shipmode set=1 hide=1]
[value name=mv_handling set=1 hide=1]
[calc] $Carts->{main} = [ { code => '99-102', quantity => 1 } ]; return; [/calc]
[tmp tmp_subtotal][subtotal noformat=1][/tmp]
[assign handling="5"]
[assign salestax="0.50"]
[assign shipping="4"]
[calc]
	my $total = $Scratch->{tmp_subtotal} + 9.50;
	my $realtotal = q{[total-cost noformat=1]};
	return 'OK' if $total == $realtotal;
	return "ERROR total=$total != real=$realtotal";
[/calc]
[assign subtotal=100]
[total-cost noformat=1] [salestax noformat=1] [shipping noformat=1] [handling noformat=1]
[assign clear=1]
[calc] $Carts->{main} = []; return; [/calc]
%%
OK\s+109.50*\s+0*.50*\s+4(?:\.00)?\s+5(?:\.00)?
%%
ERROR
%%

%%
Test for assign tag's effects on the cart.
%%%
000130
%%
Set: [error name=junk set="An error"]
Test: [error all=1 keep=1]
Show_delete: [error all=1 show_error=1]
Should_be_blank:[error all=1]
%%
(?x)
	Set:\s*1
	\s+
	Test:\s+1
	\s+
	Show_delete:\s+ An.error
	\s+
	Should_be_blank:\s*$
%%
0
%%

%%
error tag test
%%%
000131
%%
[value name=something set=OK hide=1]
[either][value something][or]ERROR[/either]
[value name=something set="" hide=1]
[either][value something][or]OK[/either]
[value name=something set=" " hide=1]
[either][value something][or]OK[/either]
%%
OK\s+OK\s+OK
%%
ERROR
%%

%%
Test of [item-accessories attribute]
%%%
000132
%%
[perl]
	$Carts->{main} = [ { code => '99-102', quantity => 1, size => 'S' } ];
	return;
[/perl]
[item-list][item-accessories size][item-accessories size, value][/item-list]
%%
"S" SELECTED>Small.*S\s*$
%%
accessories
%%

%%
accessories tag test
%%%
000133
%%
[perl]
$Carts->{main} = [
	{ code => '93-111', quantity => 1000, },
	{ code => '93-111', quantity => 102, },
	{ code => '93-111', quantity => 100, },
	{ code => '93-111', quantity => 98, },
	{ code => '93-111', quantity => 21, },
	{ code => '93-111', quantity => 20, },
	{ code => '93-111', quantity => 15, },
	{ code => '93-111', quantity => 10, },
	{ code => '93-111', quantity => 9, },
	{ code => '93-111', quantity => 5, },
	{ code => '93-111', quantity => 4, },
	{ code => '93-111', quantity => 1, },
	{ code => '00-342', quantity => 2, },
	{ code => '00-0011a', quantity => 1, },
];
return;
[/perl]
:[item-list main][item-subtotal noformat=1] [/item-list]:
%%
:65000(?:\.00)? 6630(?:\.00)? 6725(?:\.00)? 6590\.5 1468\.95 1399(?:\.00)? 1087\.5 725 652\.5 362\.5 320(?:\.00)? 80(?:\.00)? 40000000(?:\.00)? 1000(?:\.00)? :
%%

%%

%%
sparse quantity pricing check (introduced in Interchange 4.9.7)
%%%
000134
%%
[set scratch_acl]0[/set]
[include include/test/scratch]
[include include/test/scratch_deny]
%%
OK include/test/scratch_deny\s*$
%%
OK.*OK
%%

%%
Test FileControl ic_scratch acl
%%%
000135
%%
[set scratch_acl]1[/set]
[include include/test/scratch]
[include include/test/scratch_deny]
[set scratch_acl][/set]
%%
OK include/test/scratch\s*$
%%
scratch_deny
%%

%%
Test FileControl ic_scratch acl
%%%
000136
%%
[set scratch_cmp]foo[/set]
[include include/test/scratch_cmp]
[include include/test/scratch_cmp_deny]
%%
^\s*OK include/test/scratch_cmp\s*$
%%
scratch_cmp_deny
%%

%%
Test FileControl ic_scratch acl
%%%
000137
%%
[set scratch_cmp]bar[/set]
[include include/test/scratch_cmp]
[include include/test/scratch_cmp_deny]
[set scratch_cmp][/set]
%%
^\s*OK include/test/scratch_cmp_deny\s*$
%%
scratch_cmp\s*.*scratch_cmp
%%

%%
Test FileControl ic_scratch acl
%%%
000138
%%
[data base=session field=session_cmp value=foo]
[include include/test/session_cmp]
[include include/test/session_cmp_deny]
%%
^\s*OK include/test/session_cmp\s*$
%%
session_cmp_deny
%%

%%
Test FileControl ic_session acl
%%%
000139
%%
[data base=session field=session_cmp value=bar]
[include include/test/session_cmp]
[include include/test/session_cmp_deny]
%%
^\s*OK include/test/session_cmp_deny\s*$
%%
session_cmp\s*.*session_cmp_deny
%%

%%
Test FileControl ic_session acl
%%%
000140
%%
[userdb function=logout hide=1]
[include include/test/file_acl]
%%

%%
OK
%%

%%
Test FileControl ic_userdb acl
%%%
000141
%%
[userdb function=login username=jking password=king]
[userdb function=set_file_acl location=include/test/file_acl mode=r]
[include include/test/file_acl]
[userdb function=logout]
%%
1\s*OK
%%
^OK
%%

%%
Test FileControl ic_userdb acl
%%%
000142
%%
[loop
	lr=1
	list="
select code from products where category = 'Renaissance'
select code from products where category ='Renaissance' order by code
select code from  products where category='Renaissance' order by code
select code from  products where category ='Renaissance' order by code
select code from  products where category in ('Renaissance', 'Accessory') order by code
select code from  products where category between ('C', 'S') order by category,code
"][query list=1 sql="[loop-code]"][sql-code] [/query][/loop]
%%
^\s*00-0011 00-0011 00-0011 00-0011 00-0011 00-0011a 19-202 00-341 00-342 00-0011\s*$
%%
ERROR
%%

%%
Some SQL select query tests
%%%
000143
%%
[unlink-file name="products/nonsql.autonumber" prefix="products/"]
[unlink-file name="tmp/cnt"]
[flag type=write table=nonsql]
BEGIN [loop
	lr=1
	list="
insert into nonsql (val1,val2) values ('[counter tmp/cnt]', '[counter tmp/cnt]')
insert into nonsql values ('[counter tmp/cnt]', '[counter tmp/cnt]', '[counter tmp/cnt]')
insert into nonsql values ('[counter tmp/cnt]', '[counter tmp/cnt]', '[counter tmp/cnt]')
select * from nonsql order by code
update nonsql set val1 = 'updated' where code = '3'
select val1 from nonsql order by code
update nonsql set val1 = 'all_updated'
select val1 from nonsql order by code
delete from nonsql order by code limit 1
select * from nonsql order by code
delete from nonsql
select * from nonsql
"][query list=1 sql="[loop-code]"][sql-code] [/query][/loop]
%%
BEGIN\s+1 1 1 01 3 6 1 1 updated 7 3 all_updated all_updated all_updated 1 3 6 2\s*$
%%
ERROR
%%

%%
Some SQL select query tests
%%%
000144
%%
[loop list="1..12" ranges=1]
[loop-code][loop-alternate -1], [/loop-alternate]
[/loop]
%%
^\s*1,\s*(\d+,\s+)+12\s*$
%%
,\s*$
%%

%%
Test [PREFIX-alternate -1]
%%%
000145
%%
[loop list="1..12" ranges=1]
[loop-alternate first_only]BEGIN:[/loop-alternate][loop-code][loop-alternate -1], [/loop-alternate]
[/loop]
%%
^\s*BEGIN:1,\s*(\d+,\s+)+12\s*$
%%
,\s*$
%%

%%
Test [PREFIX-alternate first_only]
%%%
000146
%%
[loop list="1..12" ranges=1]
[loop-code] [loop-alternate 3]<BR>[/loop-alternate]
[/loop]
%%
^\s*((\d+\s+){3}<BR>\s*){4}\s*$
%%
,\s*$
%%

%%
Test [PREFIX-alternate 3]
%%%
000147
%%
[value name=mv_item_alternate set=""]
[loop list="1..12" ranges=1]
[loop-code] [loop-alternate]<BR>[/loop-alternate]
[/loop]
%%
^\s*((\d+\s+){2}<BR>\s*){6}\s*$
%%
,\s*$
%%

%%
Test [PREFIX-alternate]
%%%
000148
%%
[value name=mv_item_alternate set="4" hide=1]
[loop list="1..12" ranges=1]
[loop-code] [loop-alternate]<BR>[/loop-alternate]
[/loop]
[value name=mv_item_alternate set=""]
%%
^\s*((\d+\s+){4}<BR>\s*){3}\s*$
%%
,\s*$
%%

%%
Test [PREFIX-alternate] using $Values->{mv_item_alternate} == 4
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
%%%
999999
%%
[the test] [perl]
# Make this come out right
return 'The expected result as a regex.';
[/perl]
%%
The expected result as a regex.
%%
The NOT expected result.
%%

%%
Skeleton test.
